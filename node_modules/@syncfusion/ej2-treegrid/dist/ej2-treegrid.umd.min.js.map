{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/models/infinite-scroll-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js","../src/treegrid/actions/infinite-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords.filter(function (items) { return !items.isSummaryRow; });\n        var keys = Object.keys(childRecords);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        if (!control.enableImmutableMode) {\n                                            parentData['childRecords'].splice(p, 1);\n                                        }\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            if (action === 'add') {\n                row = control.getRows()[control.grid.getCurrentViewRecords().indexOf(record)];\n            }\n            else {\n                row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n            }\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n            if (control.enableImmutableMode && control['action'] === 'indenting' || control['action'] === 'outdenting') {\n                control.renderModule.RowModifier({\n                    data: record, row: row\n                });\n            }\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[i]] = column[keys[i]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[i] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'].renderModule[refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[stackedHeader] ? this.parent[columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length) {\n                this.filteredList = [];\n            }\n        }\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            (this.filteredList.length > 0)) ? this.filteredList :\n            this.parent.flatData;\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization && record.childRecords.length > 0) {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[i].hasChildRecords) {\n                                    _this.updateParentSelection(child[i]);\n                                }\n                                else if (!(child[i].hasChildRecords) && !isNullOrUndefined(child[i])) {\n                                    _this.updateSelectedItems(child[i], child[i].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend, CellRenderer } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0 && !parentrec[0].isSummaryRow) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('data-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[portals]);\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.parent.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.parent.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.parent.grid.getRowsObject();\n                var indent = _this.parent.grid.getIndentCount();\n                var cellIndex = _this.parent.grid.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[j].isDataRow && !isNullOrUndefined(rowsObj[j].index)) {\n                        var cell = rowsObj[j][cells][cellIndex];\n                        var cellRenderer = new CellRenderer(_this.parent.grid, _this.parent.grid.serviceLocator);\n                        var td = _this.parent.getCellFromIndex(rowsObj[j].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[j].data, { index: rowsObj[j][rowIdx] });\n                        var treecell = _this.parent.getRows()[j].cells[cellIndex];\n                        _this.cellRender({ data: rowsObj[j].data, cell: treecell, column: cell.column });\n                    }\n                }\n            });\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            var keys = Object.keys(data);\n            for (var i = 0; i < keys.length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        var keys = Object.keys(data);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if ((!isNullOrUndefined(currentData[this.parent.childMapping]) && !isCountRequired(this.parent)) ||\n                ((currentData[this.parent.hasChildMapping]) && isCountRequired(this.parent) && this.parent.initialRender)) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[getColumnByField](this.parent.grid.\n                    sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            if (this.parent.allowRowDragAndDrop && !isNullOrUndefined(this.parent.rowDragAndDropModule['draggedRecord']) &&\n                this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                var dragdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                modifiedData.splice(dragdIndex, 1);\n                var dropdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                if (this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                    modifiedData.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n                else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                    modifiedData.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n            }\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n    ContextMenuItems[ContextMenuItems[\"RowIndent\"] = 16] = \"RowIndent\";\n    ContextMenuItems[ContextMenuItems[\"RowOutdent\"] = 17] = \"RowOutdent\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.indentOutdentAction = 'indentOutdentAction';\n        _this.modifiedRecords = [];\n        _this.stackedHeader = false;\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[i]] !== current[keys[i]] && excludeKeys.indexOf(keys[i]) === -1) {\n                        var isDate = old[keys[i]] instanceof Date && current[keys[i]] instanceof Date;\n                        if (!isDate || (old[keys[i]].getTime() !== current[keys[i]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[cellIndex];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[cIndex];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        var freezePresent = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'freeze';\n        });\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount() || freezePresent.length) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        var IsRowDDInjected = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'rowDragAndDrop';\n        });\n        if (this.allowRowDragAndDrop || IsRowDDInjected.length) {\n            if ((!isNullOrUndefined(this.toolbar) && (this.toolbar['includes']('Indent') ||\n                this.toolbar['includes']('Outdent')))) {\n                this.isIndentEnabled = true;\n            }\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        if (this.isVue) {\n            this.grid.isVue = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[i].member === 'virtualscroll') {\n                    modules[i].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        var root = 'root';\n        this.grid[root] = this[root] ? this[root] : this;\n        this.grid.appendTo(gridContainer);\n        if (this.isIndentEnabled) {\n            this.refreshToolbarItems();\n        }\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.refreshToolbarItems = function () {\n        var toolbarElement = this.toolbarModule.getToolbar();\n        var indentID = this.element.id + '_gridcontrol_indent';\n        var outdentID = this.element.id + '_gridcontrol_outdent';\n        var indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n        var outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n        indentElement.classList.add('e-hidden');\n        outdentElement.classList.add('e-hidden');\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.IsExpandCollapseClicked = function (args) {\n        if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            return;\n        }\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowDeselecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[i].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[updateRowSelection](_this.getRows()[i], _this.getCurrentViewRecords()[i].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (!isNullOrUndefined(args.data)) {\n                _this.notify(events.rowDeselected, args);\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[action] === 'expand' || _this.dataResults[action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[updateRowSelection](_this.getRows()[index], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[dataSource].offline = true;\n                    dm[isDataAvailable] = true;\n                    dm[dataSource].json = e.result;\n                    dm[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            if (_this.action !== 'indenting' && _this.action !== 'outdenting') {\n                var callBackPromise_2 = new Deferred();\n                _this.trigger(events.actionBegin, args, function (actionArgs) {\n                    if (!actionArgs.cancel) {\n                        _this.notify(events.beginEdit, actionArgs);\n                    }\n                    callBackPromise_2.resolve(actionArgs);\n                });\n                return callBackPromise_2;\n            }\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            if (_this.action === 'indenting' || _this.action === 'outdenting') {\n                _this.action = _this.action === 'indenting' ? 'indented' : 'outdented';\n                var selectedItem_1 = [_this.selectedRecords];\n                var actionArgs = {\n                    data: selectedItem_1,\n                    dropIndex: _this.dropIndex,\n                    dropPosition: _this.dropPosition,\n                    modifiedRecords: _this.modifiedRecords,\n                    requestType: _this.action,\n                    row: _this.selectedRows\n                };\n                _this.trigger(events.actionComplete, actionArgs);\n                var currentPageItem = _this.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === selectedItem_1[0].uniqueID;\n                });\n                if (!currentPageItem.length) {\n                    _this.refreshToolbarItems();\n                }\n                _this.action = '';\n                _this.selectedRecords = _this.selectedRows = _this.modifiedRecords = [];\n            }\n            else {\n                _this.trigger(events.actionComplete, args);\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    case 'Indent':\n                    case ContextMenuItems.RowIndent:\n                        items.push({ text: this.l10n.getConstant('RowIndent'),\n                            target: '.e-content', iconCss: 'e-indent e-icons', id: this.element.id + '_gridcontrol_cmenu_Indent' });\n                        break;\n                    case 'Outdent':\n                    case ContextMenuItems.RowOutdent:\n                        items.push({ text: this.l10n.getConstant('RowOutdent'),\n                            target: '.e-content', iconCss: 'e-outdent e-icons', id: this.element.id + '_gridcontrol_cmenu_Outdent' });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        index = index === 0 ? -1 : index;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[i][prop])) {\n                        gridColumn[prop] = this.getGridColumns(column[i][prop], false, index);\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (this.initialRender && !isNullOrUndefined(treeColumn) && this.enablePersistence && prop === 'edit') {\n                        gridColumn[prop] = treeGridColumn[prop] = treeColumn[prop];\n                    }\n                    else if (!(treeColumn) || prop !== 'sortComparer') {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n            if (!isNullOrUndefined(this.columnModel[this.treeColumnIndex]) && this.enableRtl) {\n                if (gridColumn.field === this.columnModel[this.treeColumnIndex].field) {\n                    if (isNullOrUndefined(this.treeColumnTextAlign)) {\n                        this.treeColumnTextAlign = this.columnModel[this.treeColumnIndex].textAlign;\n                        this.treeColumnField = this.columnModel[this.treeColumnIndex].field;\n                    }\n                    gridColumn.textAlign = 'Right';\n                }\n            }\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    this.TreeGridLocale();\n                    this.grid.toolbar = this.getGridToolbar();\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    if (!isNullOrUndefined(this.treeColumnField)) {\n                        this.updateTreeColumnTextAlign();\n                    }\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    TreeGrid.prototype.updateTreeColumnTextAlign = function () {\n        var gridColumn = this.grid.getColumnByField(this.treeColumnField);\n        gridColumn.textAlign = this.enableRtl ? 'Right' : this.treeColumnTextAlign;\n        this.grid.refreshColumns();\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[i]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[k];\n                delete currentObject[objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n        var visibleRecords = this.getVisibleRecords();\n        if (visibleRecords.length > 0 && key === (visibleRecords[visibleRecords.length - 1])[primaryKey]) {\n            var table = this.getContentTable();\n            var sHeight = table.scrollHeight;\n            var clientHeight = this.getContent().clientHeight;\n            this.lastRowBorder(this.getRows()[currentRecords.indexOf(record)], sHeight <= clientHeight);\n        }\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        var columnModel = 'columnModel';\n        if (this.grid.columns.length !== this.columnModel.length) {\n            Columns = this.grid[columnModel];\n        }\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[i].field && this.columnModel[i].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[i].template = temp;\n                }\n            }\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            this.stackedHeader = true;\n        }\n        if (!this.stackedHeader) {\n            this.setProperties({ columns: this.columnModel }, true);\n        }\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.grid.dataSource = this.flatData;\n            }\n            else {\n                this.grid.setProperties({\n                    dataSource: new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor)\n                }, true);\n            }\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (expandingArgs.expandAll) {\n                    _this.expandCollapseAllChildren(record, 'expand', key, level);\n                }\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, true);\n                    }\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[i]);\n        }\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            if (this.detailTemplate) {\n                record = this.grid.getCurrentViewRecords()[row.getAttribute('data-rowindex')];\n            }\n            else {\n                record = this.grid.getCurrentViewRecords()[row.rowIndex];\n            }\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                if (collapsingArgs.collapseAll) {\n                    _this.expandCollapseAllChildren(record, 'collapse', key);\n                }\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, false);\n                    }\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.updateExpandStateMapping = function (record, state) {\n        var totalRecords = record;\n        if (totalRecords.length) {\n            for (var i = 0; i < totalRecords.length; i++) {\n                totalRecords[i][this.expandStateMapping] = state;\n                editAction({ value: totalRecords[i], action: 'edit' }, this, this.isSelfReference, totalRecords[i].index, this.grid.selectedRowIndex, this.expandStateMapping);\n            }\n        }\n        else {\n            record[this.expandStateMapping] = state;\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, this.expandStateMapping);\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[i].parentItem)) {\n                var puniqueID_1 = record[i].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[i], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[i], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('data-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i >= 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return ((r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1))) || (r.querySelector('.e-gridrowindex' + record.index + 'level0' + '.e-summarycell')));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if ((!isNullOrUndefined(childRecords[i].childRecords) && childRecords[i].childRecords.length > 0) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = 'none';\n            row = rows[i];\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[i].style.display = 'none';\n                rightrows[i].style.display = 'none';\n                if (!rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[i];\n                    }\n                    else if (rightrows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[i];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * Updates the rows and cells\n     *\n     * @param {Object[]} records - Updates the given records\n     * @param {HTMLTableRowElement[]} rows - Updates the given rows\n     * @param {number} index -  Updates the given cell index\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRowAndCellElements = function (records, rows, index) {\n        for (var i = 0; i < records.length; i++) {\n            this.renderModule.cellRender({\n                data: records[i], cell: rows[i].cells[index],\n                column: this.grid.getColumns()[this.treeColumnIndex],\n                requestType: 'rowDragAndDrop'\n            });\n            if (this['action'] === 'indenting' || this['action'] === 'outdenting') {\n                this.renderModule.RowModifier({\n                    data: records[i], row: rows[i]\n                });\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Indents the record to one level of hierarchy. Moves the selected row as the last child of its previous row.\n     *\n     * @param {Object} record – specifies the record to do indented\n     * @returns {void}\n     */\n    TreeGrid.prototype.indent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'indent');\n        }\n    };\n    /**\n     * Outdent the record to one level of hierarchy. Moves the selected row as sibling to its parent row.\n     *\n     * @param {Object} record – specifies the record to do outdented\n     * @returns {void}\n     */\n    TreeGrid.prototype.outdent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'outdent');\n        }\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[i]).rowIndex;\n                data[i] = this.parent.getCurrentViewRecords()[index];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[selectedItemIndex] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[selectedItemIndex]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[i].taskData === record_1.parentItem.taskData) {\n                            dropIndex = i;\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.parent.allowRowDragAndDrop && this.selectedRecord) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[action] = 'indenting';\n                tObj[droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.parent.allowRowDragAndDrop && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[dropIndex].getAttribute('data-rowindex'), 10);\n                }\n                tObj[action] = 'outdenting';\n                tObj[droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization && _this.parent.allowRowDragAndDrop) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization && _this.parent.allowRowDragAndDrop) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[i].parentUniqueID, this.parent);\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = findChildrenRecords(records[i]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[rowIndex];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[selectedItemIndex].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[index];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[i];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            draggedRecord_2.level = droppedRecord.level;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = getValue('uniqueIDCollection.' + record.childRecords[i].uniqueID, tObj);\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = getValue('uniqueIDCollection.' + record.childRecords[i].uniqueID, this.parent);\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    if (parent['expanded'] === false && this.parent.getVisibleRecords().indexOf(record) === -1 && isNullOrUndefined(this.parent['dataResults']['action'])) {\n                        this.parent.expandRow(this.parent.getRows()[parent['index']], parent);\n                    }\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[primaryKeyField_1] === rowDetails.record[primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.updatePageSize = function (pageingDetails) {\n        var updateSize = pageingDetails.result.length;\n        var gridPagerModule = this.parent.grid.pagerModule;\n        if (this.parent.pageSettings.pageSizes === true) {\n            if (gridPagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === gridPagerModule.pagerObj.getLocalizedLabel('All')) {\n                gridPagerModule['pagerObj'].totalRecordsCount = updateSize;\n                this.parent.grid.pageSettings.pageSize = updateSize;\n            }\n        }\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            this.updatePageSize(pageingDetails);\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.rowDeselected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.rowDeselected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var indentElement;\n        var outdentElement;\n        var indentID = tObj.element.id + '_gridcontrol_indent';\n        var outdentID = tObj.element.id + '_gridcontrol_outdent';\n        var toolbarElement = this.parent.grid.toolbarModule.getToolbar();\n        var indentEle = toolbarElement.querySelector('#' + indentID);\n        var outdentEle = toolbarElement.querySelector('#' + outdentID);\n        var row = args.row;\n        var selectedrow = tObj.getSelectedRows()[0];\n        if (!isNullOrUndefined(row[0])) {\n            row = row[0];\n        }\n        row = (!isNullOrUndefined(selectedrow) && selectedrow.rowIndex !== row.rowIndex) ? selectedrow : row;\n        if (indentEle !== null && outdentEle !== null) {\n            indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n            outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n            if (row.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                indentElement.classList.add('e-hidden');\n                outdentElement.classList.add('e-hidden');\n            }\n            else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                var selectedItem = tObj.getCurrentViewRecords()[row.rowIndex];\n                if (!isNullOrUndefined(selectedItem)) {\n                    if ((selectedItem.level > tObj.getCurrentViewRecords()[row.rowIndex - 1].level)) {\n                        indentElement.classList.add('e-hidden');\n                    }\n                    else {\n                        indentElement.classList.remove('e-hidden');\n                    }\n                    if (selectedItem.level === tObj.getCurrentViewRecords()[row.rowIndex - 1].level) {\n                        indentElement.classList.remove('e-hidden');\n                    }\n                    if (selectedItem.level === 0) {\n                        outdentElement.classList.add('e-hidden');\n                    }\n                    if (selectedItem.level !== 0) {\n                        outdentElement.classList.remove('e-hidden');\n                    }\n                }\n            }\n            if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                if (this.parent.toolbar['includes']('Indent')) {\n                    indentElement.classList.add('e-hidden');\n                }\n                if (this.parent.toolbar['includes']('Outdent')) {\n                    outdentElement.classList.add('e-hidden');\n                }\n            }\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        var indentOutdentAction = 'indentOutdentAction';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[indentOutdentAction](null, 'indent');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[indentOutdentAction](null, 'outdent');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[i_1]))) ?\n                                columns[i_1] : getObject('field', (columns[i_1]));\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[columnIndex])) ?\n                    columns[columnIndex] : getObject('field', columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                if (this.parent.allowRowDragAndDrop && data[d].childRecords.indexOf(this.parent.rowDragAndDropModule['draggedRecord']) !== -1 && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                    var dragdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                    childSort.splice(dragdIndex, 1);\n                    var dropdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                    if (this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                        childSort.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                    else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                        childSort.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                }\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        var indent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Indent', args.element);\n        var outdent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Outdent', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n        if (indent || outdent) {\n            var tObj = this.parent;\n            var selectedrow = tObj.getSelectedRows()[0];\n            var targetElement = args.event.target.closest('td');\n            if (isNullOrUndefined(targetElement) || (!isNullOrUndefined(targetElement) && !targetElement.classList.contains('e-rowcell'))) {\n                indent.style.display = outdent.style.display = 'none';\n            }\n            else {\n                if (selectedrow.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indent.style.display = outdent.style.display = 'none';\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[selectedrow.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level)) {\n                            indent.style.display = 'none';\n                        }\n                        else {\n                            indent.style.display = 'block';\n                        }\n                        if (selectedItem.level === tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) {\n                            indent.style.display = 'block';\n                        }\n                        if (selectedItem.level === 0) {\n                            outdent.style.display = 'none';\n                        }\n                        if (selectedItem.level !== 0) {\n                            outdent.style.display = 'block';\n                        }\n                    }\n                }\n                if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                    if (this.parent.toolbar['includes']('Indent')) {\n                        indent.style.display = 'none';\n                    }\n                    if (this.parent.toolbar['includes']('Outdent')) {\n                        outdent.style.display = 'none';\n                    }\n                }\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.editModule['isAddedRowByContextMenu'] = true;\n            this.parent.addRecord();\n        }\n        if (args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' || args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Outdent') {\n            if (!isNullOrUndefined(this.parent.rowDragAndDropModule)) {\n                var indentOutdentAction = 'indentOutdentAction';\n                var action = args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' ? 'indent' : 'outdent';\n                this.parent.rowDragAndDropModule[indentOutdentAction](null, action);\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount === this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex] : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[i]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[i]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('data-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('data-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[i].setAttribute('data-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[i_1].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[i_1]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                            .indexOf(currentViewRecords[0][primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[i_2][index] = i_2;\n                setValue('uniqueIDCollection.' + data[i_2][uniqueID] + '.index', i_2, this.parent);\n                if (!data[i_2][level]) {\n                    this.parent.parentData.push(data[i_2]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[index] = this.parent.getSelectedRows()[0][rowIndex];\n        }\n        else {\n            args[index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[i].uniqueID, data[i], this.parent);\n            }\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[k];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[treeColIndex];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[l];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[k].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[i].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[i];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[primaryKeys_2[0]] === args.data[i][primaryKeys_2[0]]) {\n                            data_1[i] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[i].uniqueID);\n                var childs = findChildrenRecords(data_1[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.grid.getCurrentViewRecords().indexOf(this.addRowRecord);\n                this.selectedIndex = parseInt(this.parent.getRows()[this.addRowIndex].getAttribute('data-rowindex'), 10);\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('data-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction());\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                if (!this.parent.enableColumnVirtualization) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || (this.isDataSourceChanged && (this.startIndex === -1 || this.startIndex === 0 && this['preStartIndex'] === 0))) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (this.parent.getRows().length && !this[initialRowTop] && !isNullOrUndefined(this.parent.getRowByIndex(0))) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[containerRect])) {\n            this.observer[containerRect] = this.observers[containerRect];\n        }\n        if (isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule['addRowIndex'])) {\n            _super.prototype[selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[i]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[data-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.dataRowIndex = addArgs.dataRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.dataRowIndex = addArgs.dataRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[preventEvent]) {\n                    _this.parent.showSpinner();\n                }\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                _this.virtualEle.adjustTable(x, _this.translateY);\n                if (_this.parent.enableColumnVirtualization) {\n                    _this.header.virtualEle.adjustTable(x, 0);\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 && index !== this[selectedRowIndex]) {\n                index = this[selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('data-rowindex');\n            }\n            if (firsttdinx === 0) {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - this.parent.getRowHeight() * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var isLastBlock = (this[selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - this.parent.getRowHeight() * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left')) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.dataRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n            _super.prototype[ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback) {\n        var containerRect = 'containerRect';\n        _super.prototype[containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[options].prevTop = this[options].prevLeft = 0;\n        return function (e) {\n            var top = _this[options].movableContainer ? _this[options].container.scrollTop : e.target.scrollTop;\n            var left = _this[options].movableContainer ? _this[options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[options].prevTop < top ? 'down' : 'up';\n            direction = _this[options].prevLeft === left ? direction : _this[options].prevLeft < left ? 'right' : 'left';\n            _this[options].prevTop = top;\n            _this[options].prevLeft = left;\n            var current = _this.sentinelInfo[direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var check = _this.check(direction);\n            if (current.entered && current.axis === 'X') {\n                if (_this[movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[movableEle], current, direction, { top: top, left: left }, _this[fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[element], current, direction, { top: top, left: left }, _this[fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced100;\n                if (current.axis === 'X') {\n                    fn = debounced50;\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n            }\n            _this[fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' || requestType === 'searching' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length)) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else if (!this.parent['isExpandAll']) {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (parentGrid.enableColumnVirtualization) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            if (freeze) {\n                frozenRightRows[i].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getExpandStatus } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    InfiniteScroll.prototype.collapseExpandInfinitechilds = function (row) {\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var infiniteParents = dm.executeLocal(new Query().where(expanded));\n        var visualData = infiniteParents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, infiniteParents);\n        });\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    if ((pageingDetails.actionArgs['action'] === 'expand' || pageingDetails.actionArgs['action'] === 'collapse') && this.parent.grid.pageSettings.currentPage !== 1) {\n                        current = 1;\n                        size = this.parent.grid.pageSettings.pageSize * this.parent.grid.pageSettings.currentPage;\n                    }\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","filter","items","isSummaryRow","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","e","p","enableImmutableMode","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","renderModule","cellRender","cell","cells","column","getColumns","requestType","RowModifier","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","rowDeselecting","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkBoxRecord","hasFilteredChildRecords","checkAll","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","templateFn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","portals","isReact","result","refreshReactColumnTemplateByUid","columnUid","clearTemplate","undefined","rowsObj","getRowsObject","indent","getIndentCount","cellIndex","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","serviceLocator","td","getCellFromIndex","refreshTD","treecell","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","rowDragAndDropModule","dragdIndex","dropdIndex","sortArgs","temp","paging","printMode","actArgs","events.pagingActions","isCollapsedStatePersist","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","indentOutdentAction","modifiedRecords","stackedHeader","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","freezePresent","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","IsRowDDInjected","isIndentEnabled","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","isVue","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","refreshToolbarItems","renderComplete","destroyTemplateFn","toolbarElement","toolbarModule","getToolbar","indentID","outdentID","indentElement","outdentElement","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","templateInstance","triggerEvents","IsExpandCollapseClicked","bindGridEvents","rowSelecting","events.rowDeselecting","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","persistSelection","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","dataManager","isQueryInvokedFromData","callBackPromise_2","events.actionBegin","updateTreeGridModel","events.beginAdd","ag","showChildSummary","refresh","selectedItem_1","selectedRecords","dropIndex","dropPosition","selectedRows","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","iconCss","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","enablePersistence","treeColumnTextAlign","textAlign","treeColumnField","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","updateTreeColumnTextAlign","closeEdit","getColumnByField","treeGridElement","hasTreeGridChild","removeListener","dataBind","document","getElementById","getPersistData","keyEntity","ignoreOnPersist","currentObject","val","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","visibleRecords","getVisibleRecords","sHeight","scrollHeight","clientHeight","getContent","goToPage","pageNo","pagerModule","updateExternalMessage","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","expandCollapseAllChildren","collapseArgs","setHeightForFrozenContent","updateExpandStateMapping","freeze","refreshScrollOffset","collapsingArgs","events.collapsed","firstElementChild","scrollTop","getRowHeight","scrollBy","state","totalRecords","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","puniqueID_1","this_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","getMovableRows","getFrozenRightRows","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateRowAndCellElements","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","outdent","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","hasDropItem","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropRows","orderToIndex","dropData","totalRecord","parentrow","request","selectedItemIndex","selectedItem","selectedRow","selectedRecord","record_1","eventTrigger","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","islastRowIndex","isEmptyRow","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","getBoundingClientRect","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","errorelem","errorValue","setStyleAttribute","border","box","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","isByMethod","draggedRecord_2","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","blockIndexes","getBlockIndexes","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","updatePageSize","pageingDetails","updateSize","gridPagerModule","pageSizes","pagerObj","pagerdropdownModule","getLocalizedLabel","pageSize","propname","skip","size","take","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","indentEle","outdentEle","selectedrow","isCheckBoxSelection","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","event","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","newlyAddedRecords","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","mRows","deleterecords","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","endIndex","rowPosition","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","dataRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","newlyAddedRecord","seletedRow","beginAddEdit","primaryKeys_2","selector","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","lastIndex","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","initialRowTop","gridTop","containerRect","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","xAxis","axis","getColumnOffset","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","virtualEle","adjustTable","header","sentinel","outBuffer","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","name","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","virtualScrollHandlers","delay","debounced50","debounce","prevTop","prevLeft","movableContainer","scrollbar","delta","clearTimeout","setTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","collapseExpandInfinitechilds","rowRenderer","RowRenderer","childRowObjects","childRowElements","infiniteParents","actions","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","isMovable","isFrozenRight","isFrozenGrid","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow"],"mappings":"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ACDpf,EAAShjB,UAAW,iBAAa,GACpCwE,IACI49B,WACDpf,EAAShjB,UAAW,mBAAe,GACtCwE,IACI49B,WACDpf,EAAShjB,UAAW,sBAAkB,GACzCwE,IACI49B,WACDpf,EAAShjB,UAAW,iBAAa,GACpCwE,IACI49B,WACDpf,EAAShjB,UAAW,gBAAY,GACnCwE,IACI49B,WACDpf,EAAShjB,UAAW,mBAAe,GACtCwE,IACI49B,WACDpf,EAAShjB,UAAW,mBAAe,GACtCwE,IACI49B,WACDpf,EAAShjB,UAAW,sBAAkB,GACzCwE,IACI49B,WACDpf,EAAShjB,UAAW,yBAAqB,GAC5CwE,IACI49B,WACDpf,EAAShjB,UAAW,uBAAmB,GAC1CwE,IACI49B,WACDpf,EAAShjB,UAAW,gBAAY,GACnCwE,IACI49B,WACDpf,EAAShjB,UAAW,qBAAiB,GACxCwE,IACI49B,WACDpf,EAAShjB,UAAW,iBAAa,GACpCwE,IACI49B,WACDpf,EAAShjB,UAAW,yBAAqB,GAC5CwE,IACI49B,WACDpf,EAAShjB,UAAW,uBAAmB,GAC1CwE,IACI49B,WACDpf,EAAShjB,UAAW,yBAAqB,GAC5CwE,IACI49B,WACDpf,EAAShjB,UAAW,oBAAgB,GACvCwE,IACI49B,WACDpf,EAAShjB,UAAW,uBAAmB,GAC1CwE,IACI49B,WACDpf,EAAShjB,UAAW,qBAAiB,GACxCwE,IACIc,YAAS,IACV0d,EAAShjB,UAAW,sBAAkB,GACzCwE,IACI49B,WACDpf,EAAShjB,UAAW,oBAAgB,GACvCwE,IACI49B,WACDpf,EAAShjB,UAAW,mBAAe,GACtCwE,IACI49B,WACDpf,EAAShjB,UAAW,sBAAkB,GACzCwE,IACI49B,WACDpf,EAAShjB,UAAW,qBAAiB,GACxCwE,IACI49B,WACDpf,EAAShjB,UAAW,sBAAkB,GACzCwE,IACI49B,WACDpf,EAAShjB,UAAW,qBAAiB,GACxCwE,IACI49B,WACDpf,EAAShjB,UAAW,sBAAkB,GACzCwE,IACI49B,WACDpf,EAAShjB,UAAW,uBAAmB,GAC1CwE,IACI49B,WACDpf,EAAShjB,UAAW,oBAAgB,GACvCwE,IACI49B,WACDpf,EAAShjB,UAAW,uBAAmB,GAC1CwE,IACI49B,WACDpf,EAAShjB,UAAW,sBAAkB,GACzCwE,IACI49B,WACDpf,EAAShjB,UAAW,mBAAe,GACtCwE,IACI49B,WACDpf,EAAShjB,UAAW,gBAAY,GACnCwE,IACI49B,WACDpf,EAAShjB,UAAW,kBAAc,GACrCwE,IACI49B,WACDpf,EAAShjB,UAAW,uBAAmB,GAC1CwE,IACI49B,WACDpf,EAAShjB,UAAW,kBAAc,GACrCwE,IACI49B,WACDpf,EAAShjB,UAAW,kBAAc,GACrCwE,IACI49B,WACDpf,EAAShjB,UAAW,sBAAkB,GACzCwE,IACI49B,WACDpf,EAAShjB,UAAW,qBAAiB,GACxCwE,IACI49B,WACDpf,EAAShjB,UAAW,mBAAe,GACtCwE,IACI49B,WACDpf,EAAShjB,UAAW,oBAAgB,GACvCwE,IACI49B,WACDpf,EAAShjB,UAAW,uBAAmB,GAC1CwE,IACI49B,WACDpf,EAAShjB,UAAW,uBAAmB,GAC1CwE,IACI49B,WACDpf,EAAShjB,UAAW,wBAAoB,GAC3CwE,IACI49B,WACDpf,EAAShjB,UAAW,kBAAc,GACrCwE,IACI49B,WACDpf,EAAShjB,UAAW,mBAAe,GACtCwE,IACI49B,WACDpf,EAAShjB,UAAW,eAAW,GAClCwE,IACI49B,WACDpf,EAAShjB,UAAW,oBAAgB,GACvCwE,IACI49B,WACDpf,EAAShjB,UAAW,0BAAsB,GAC7CwE,IACI49B,WACDpf,EAAShjB,UAAW,eAAW,GAClCwE,IACIc,YAAU,IACX0d,EAAShjB,UAAW,wBAAoB,GAC3CwE,IACI09B,aAAYruB,KACbmP,EAAShjB,UAAW,yBAAqB,GAC5CwE,IACIc,YAAS,IACV0d,EAAShjB,UAAW,wBAAoB,GAC3CwE,IACIc,YAAS,IACV0d,EAAShjB,UAAW,sBAAkB,GACzCwE,IACI49B,WACDpf,EAAShjB,UAAW,wBAAoB,GAC3CwE,IACI49B,WACDpf,EAAShjB,UAAW,8BAA0B,GACjDwE,IA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"}